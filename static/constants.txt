plugin.tx_radialsearch_pi1 {

  # cat=Radial Search - autocomplete/enable/100;   type=+int;     label= Min length: Minimum length of the search word for autocomplete
  autocomplete.minLength         = 2
  # cat=Radial Search - autocomplete/others/999;   type=user[EXT:radialsearch/lib/class.tx_radialsearch_em.php:tx_radialsearch_em->promptExternalLinks]; label=External Links
  autocomplete.externalLinks = 0

  # cat=Radial Search - css/enable/100;             type=string;     label= CSS default file: Path of the CSS file
  css.default.path               = EXT:radialsearch/res/css/tx_radialsearch_pi1.css
  # cat=Radial Search - css/enable/101;             type=string;     label= CSS jQuery UI file: Path of the CSS file. Leave it empty, if you don't need the jQuery UI CSS.
  css.jquery.path        = EXT:radialsearch/res/css/jQuery/smoothness/jquery-ui.css
  # cat=Radial Search - css/others/999;             type=user[EXT:radialsearch/lib/class.tx_radialsearch_em.php:tx_radialsearch_em->promptExternalLinks]; label=External Links
  css.externalLinks = 0

  # cat=Radial Search - Filter/enable/100;          type=string;     label= Country Code: ISO country code. For example: DE, GB, US. Leave it empty, if ZIP code of all countries should be available.
  filter.country_code       = 
  # cat=Radial Search - Filter/enable/101;          type=string;     label= State Code: Code of the 1. order subdivision (state). For example: TH. Leave it empty, if ZIP code of all subdivisions should be available.
  filter.admin_code1        = 
  # cat=Radial Search - Filter/others/999;          type=user[EXT:radialsearch/lib/class.tx_radialsearch_em.php:tx_radialsearch_em->promptExternalLinks]; label=External Links
  filter.externalLinks = 0

  # cat=Radial Search - GET POST/enable/100;        type=string;     label= Parameter: Parameter for the URL. Sent by GET or Post. Usually the piVar parameter of your extension. Examples: tx_browser_pi1, tx_myext_pi1
  gp.parameter          = tx_browser_pi1
  # cat=Radial Search - GET POST/enable/101;        type=string;     label= Sword: HTML name of the input field for the search word. Example: radialsearch. Would become in URL: tx_browser_pi1[radialsearch]
  gp.input              = radialsearch
  # cat=Radial Search - GET POST/enable/102;        type=string;     label= Radius: HTML name of the select box with options for the radius. Example: radius. Would become in URL: tx_browser_pi1[radius]
  gp.select             = radius 
  # cat=Radial Search - GET POST/others/999;        type=user[EXT:radialsearch/lib/class.tx_radialsearch_em.php:tx_radialsearch_em->promptExternalLinks]; label=External Links
  gp.externalLinks = 0

  # cat=Radial Search - html/enable/100;            type=string;     label= Input ID: ID of the input field. Without any hash!
  html.input.id           = lookfromplace
  # cat=Radial Search - html/enable/101;            type=string;     label= Template: Path of the HTML template file
  html.path               = EXT:radialsearch/res/html/tx_radialsearch_pi1.html
  # cat=Radial Search - html/others/999;            type=user[EXT:radialsearch/lib/class.tx_radialsearch_em.php:tx_radialsearch_em->promptExternalLinks]; label=External Links
  html.externalLinks = 0

  # cat=Radial Search - JavaScript/enable/101;      type=string;     label= Path: Path of the JavaScript snippet.
  javascript.path               = EXT:radialsearch/res/js/tx_radialsearch_pi1.js
  # cat=Radial Search - JavaScript/enable/102;      type=boolean;    label= Place to footer: If enabled, the script will placed at the footer otherwise on the top.
  javascript.placeToFooter      = 1
  # cat=Radial Search - JavaScript/enable/103;      type=boolean;    label= Inline: If enabled, the script will included inline. This is obligated, if the script contains marker, which should replaced at runtime.
  javascript.inline             = 1
  # cat=Radial Search - JavaScript/others/999;      type=user[EXT:radialsearch/lib/class.tx_radialsearch_em.php:tx_radialsearch_em->promptExternalLinks]; label=External Links
  javascript.externalLinks = 0

  # cat=Radial Search - radiusbox/enable/101;       type=options[Km];         label= Unit: kilometer (sorry, miles aren't supported in the current version)
  radiusbox.unit               = Km
  # cat=Radial Search - radiusbox/enable/102;       type=string;                    label= Options: Comma separated values (CSV)
  radiusbox.options            = 5, 10, 25, 50, 100
  # cat=Radial Search - radiusbox/others/999;       type=user[EXT:radialsearch/lib/class.tx_radialsearch_em.php:tx_radialsearch_em->promptExternalLinks]; label=External Links
  radiusbox.externalLinks = 0

  # cat=Radial Search - searchmode/enable/100;      type=options[place,zip,place and zip];     label= Mode: Search in the fields place or zip or place and zip. 
  search.mode               = place and zip
  # cat=Radial Search - searchmode/others/999;      type=user[EXT:radialsearch/lib/class.tx_radialsearch_em.php:tx_radialsearch_em->promptExternalLinks]; label=External Links
  search.externalLinks = 0

  # cat=Radial Search - sql/enable/100;             type=+int;     label= Limit: Maximum amount of rows, which should returned by the database.
  sql.limit           = 12
  # cat=Radial Search - sql/others/999;             type=user[EXT:radialsearch/lib/class.tx_radialsearch_em.php:tx_radialsearch_em->promptExternalLinks]; label=External Links
  sql.externalLinks = 0

}