

  ///////////////////////////////////////////////////////////////
  //
  // INDEX
  //
  // includeLibs
  // plugin.tx_radialsearch
  // plugin.tx_radialsearch_pi1
  // plugin.tx_radialsearch_pi2
  // page



  ///////////////////////////////////////////////////////////////
  //
  // includeLibs

includeLibs {
  tx_radialsearch_userfunc = EXT:radialsearch/lib/userfunc/class.tx_radialsearch_userfunc.php
}
  // includeLibs



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_radialsearch

plugin.tx_radialsearch {
    // htmlClass, linearDistance
  masterTemplates =
  masterTemplates {
      // [STRING] HTML class depending on radius. Returns: radialsearch radialsearch-without-search, radialsearch radialsearch-within-radius, radialsearch radialsearch-outside-radius
    htmlClass = COA
    htmlClass {
        // HTML class without any radial search. Returns: radialsearch radialsearch-without-search
      10 = TEXT
      10 {
        if {
          isFalse {
            data = GP:{$plugin.tx_radialsearch_pi1.gp.parameter}|{$plugin.tx_radialsearch_pi1.gp.input}
          }
        }
        value       = radialsearch radialsearch-without-search
        noTrimWrap  = | ||
      }
        // HTML class with a radial search
      20 = COA
      20 {
        if {
          isTrue {
            data = GP:{$plugin.tx_radialsearch_pi1.gp.parameter}|{$plugin.tx_radialsearch_pi1.gp.select}
          }
        }
          // HTML class, if record is within the given radius
        10 = TEXT
        10 {
          if {
            isLessThan {
              field = {$plugin.tx_radialsearch_pi1.distance.fieldLabel}
            }
            value {
              data = GP:{$plugin.tx_radialsearch_pi1.gp.parameter}|{$plugin.tx_radialsearch_pi1.gp.select}
            }
          }
          value = radialsearch radialsearch-within-radius
          noTrimWrap  = | ||
        }
          // HTML class, if record is outside of the given radius
        20 = TEXT
        20 {
          if {
            isLessThan {
              field = {$plugin.tx_radialsearch_pi1.distance.fieldLabel}
            }
            value {
              data = GP:{$plugin.tx_radialsearch_pi1.gp.parameter}|{$plugin.tx_radialsearch_pi1.gp.select}
            }
            negate = 1
          }
          value = radialsearch radialsearch-outside-radius
          noTrimWrap  = | ||
        }
      }
    }
      // [DOUBLE] Linear distance
    linearDistanceDouble = TEXT
    linearDistanceDouble {
      if {
        isTrue {
          data = GP:{$plugin.tx_radialsearch_pi1.gp.parameter}|{$plugin.tx_radialsearch_pi1.gp.input}
        }
      }
      required    = 1
      field       = {$plugin.tx_radialsearch_pi1.distance.fieldLabel}
      numberFormat {
        decimals      = {$plugin.tx_radialsearch_pi1.distance.decimals}
        dec_point     = {$plugin.tx_radialsearch_pi1.distance.dec_point}
        thousands_sep = {$plugin.tx_radialsearch_pi1.distance.thousands_sep}
      }
    }
      // [STRING] Linear distance
    linearDistanceString = COA
    linearDistanceString {
      if {
        isTrue {
          data = GP:{$plugin.tx_radialsearch_pi1.gp.parameter}|{$plugin.tx_radialsearch_pi1.gp.input}
        }
      }
        // [DOUBLE] Linear distance
      10 = TEXT
      10 {
        field = {$plugin.tx_radialsearch_pi1.distance.fieldLabel}
        numberFormat {
          decimals      = {$plugin.tx_radialsearch_pi1.distance.decimals}
          dec_point     = {$plugin.tx_radialsearch_pi1.distance.dec_point}
          thousands_sep = {$plugin.tx_radialsearch_pi1.distance.thousands_sep}
        }
      }
      20 = TEXT
      20 {
        value = Km linear distance from
        lang {
          de = Km Luftlinie entfernt von
          en = Km linear distance from
        }
        noTrimWrap = | | |
      }
      30 = TEXT
      30 {
        data = GP:{$plugin.tx_radialsearch_pi1.gp.parameter}|{$plugin.tx_radialsearch_pi1.gp.input}
      }
    }
  }
}
  // plugin.tx_radialsearch



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_radialsearch_pi1

plugin.tx_radialsearch_pi1 {
  userFunc = tx_radialsearch_pi1->sword
    // Never remove this property!
  pluginCheck = dummy
    // GETPOST: fieldradius, fieldsword, parameter
  gp =
  gp {
      // [String] Radius: HTML name of the select box with options for the radius. Example: radius. Would become in URL: tx_browser_pi1[radius]
    select    = {$plugin.tx_radialsearch_pi1.gp.select}
      // [String] Sword: HTML name of the input field for the search word. Example: radialsearch. Would become in URL: tx_browser_pi1[radialsearch]
    input     = {$plugin.tx_radialsearch_pi1.gp.input}
      // [String] Parameter for the URL. Sent by GET or Post. Usually the piVar parameter of your extension. Examples: tx_browser_pi1, tx_myext_pi1
    parameter = {$plugin.tx_radialsearch_pi1.gp.parameter}
  }
      // css, html, js
  res =
  res {
      // marker, path
    css =
    css {
        // marker, path
      tx_radialsearch_pi1 =
      tx_radialsearch_pi1 {
          // [Array] html_input_id
        marker =
        marker {
            // [String] ID of the input field
          html_input_id = {$plugin.tx_radialsearch_pi1.html.input.id}
        }
          // [String] Path of the css file
        path = {$plugin.tx_radialsearch_pi1.css.default.path}
      }
    }
      // marker, path
    html =
    html {
        // marker, path
      tx_radialsearch_pi1 =
      tx_radialsearch_pi1 {
          // [Array] html_input_id
        marker =
        marker {
            // [String] ID of the input field
          html_input_id = {$plugin.tx_radialsearch_pi1.html.input.id}
        }
          // [String] Path of the html template
        path = {$plugin.tx_radialsearch_pi1.html.path}
      }
    }
      // inline, filter, marker, path, placeToFooter
    js =
    js {
        // inline, filter, marker, path, placeToFooter
      tx_radialsearch_pi1 =
      tx_radialsearch_pi1 {
          // [Boolean] 0 (default): link to the script file, 1: include the script inline
        inline = {$plugin.tx_radialsearch_pi1.javascript.inline}
          // [Array] admin_code1, country_code
        filter =
        filter {
            // [String] admin_code1 (1. subdivision/state) for the filter
          admin_code1 = COA
          admin_code1 {
              // if admin_code1 isn't set
            10 = TEXT
            10 {
              if {
                isFalse = {$plugin.tx_radialsearch_pi1.filter.admin_code1}
              }
              value = "*"
            }
              // if admin_code1 is set
            20 = TEXT
            20 {
              if {
                isTrue = {$plugin.tx_radialsearch_pi1.filter.admin_code1}
              }
              value = "{$plugin.tx_radialsearch_pi1.filter.admin_code1}"
            }
          }
            // [String] country_code for the filter
          country_code = COA
          country_code {
              // if country code isn't set
            10 = TEXT
            10 {
              if {
                isFalse = {$plugin.tx_radialsearch_pi1.filter.country_code}
              }
              value = "*"
            }
              // if country code is set
            20 = TEXT
            20 {
              if {
                isTrue = {$plugin.tx_radialsearch_pi1.filter.country_code}
              }
              value = "{$plugin.tx_radialsearch_pi1.filter.country_code}"
            }
          }
        }
          // [Array] html_input_id, maxrows, minlength
        marker =
        marker {
            // [String] ID of the input field
          html_input_id = "#{$plugin.tx_radialsearch_pi1.html.input.id}"
            // [String] Limit for rows of the database query
          limit = {$plugin.tx_radialsearch_pi1.sql.limit}
            // [String] Minimum length of the search word for autocomplete
          minlength = {$plugin.tx_radialsearch_pi1.autocomplete.minLength}
        }
          // [String] Path of the script
        path          = {$plugin.tx_radialsearch_pi1.javascript.path}
          // [Boolean] 1 (default): place JSS scripts in the footer section. 0: place it on top.
        placeToFooter = {$plugin.tx_radialsearch_pi1.javascript.placeToFooter}
      }
    }
  }
    // Selectbox for the radius: options, unit
  radiusbox =  
  radiusbox {
      // [String/CSV] Comma separated values (CSV) for the options of the selectbox. Example: 5,10,25,50,100
    options = {$plugin.tx_radialsearch_pi1.radiusbox.options}
      // [Array] TypoScript numberFormat
    numberFormat =
    numberFormat {
      decimals      = {$plugin.tx_radialsearch_pi1.distance.decimals}
      dec_point     = {$plugin.tx_radialsearch_pi1.distance.dec_point}
      thousands_sep = {$plugin.tx_radialsearch_pi1.distance.thousands_sep}
    }
      // [String] miles || km. Important for calculating.
    unit    = {$plugin.tx_radialsearch_pi1.radiusbox.unit} 
  }
    // htmlinputid, htmlinputlabel, htmlinputvalue, htmlselectid, htmlselectlabel, htmlselectvalue
  _HTMLMARKER =
  _HTMLMARKER {
      // [String] replace _HTMLMARKER_HTMLINPUTID
    htmlinputid = {$plugin.tx_radialsearch_pi1.html.input.id}
      // [String] replace _HTMLMARKER_HTMLINPUTLABEL
    htmlinputlabel = TEXT
    htmlinputlabel {
      data = LLL:EXT:radialsearch/pi1/locallang.xml:htmlinputlabel
    }
      // [String] replace _HTMLMARKER_HTMLINPUTNAME
    htmlinputname = {$plugin.tx_radialsearch_pi1.gp.parameter}[{$plugin.tx_radialsearch_pi1.gp.input}]
      // [String] replace _HTMLMARKER_HTMLINPUTVALUE
    htmlinputvalue = TEXT
    htmlinputvalue {
      data = GP:{$plugin.tx_radialsearch_pi1.gp.parameter}|{$plugin.tx_radialsearch_pi1.gp.input}
    }
      // [String] replace _HTMLMARKER_HTMLSELECTID
    htmlselectid    = {$plugin.tx_radialsearch_pi1.gp.parameter}_{$plugin.tx_radialsearch_pi1.gp.select}
      // [String] replace _HTMLMARKER_HTMLSELECTLABEL
    htmlselectlabel = TEXT
    htmlselectlabel {
      data = LLL:EXT:radialsearch/pi1/locallang.xml:htmlselectlabel
    }
      // [String] replace _HTMLMARKER_HTMLSELECTNAME
    htmlselectname  = {$plugin.tx_radialsearch_pi1.gp.parameter}[{$plugin.tx_radialsearch_pi1.gp.select}]
  }
}
  // plugin.tx_radialsearch_pi1



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_radialsearch_pi2

plugin.tx_radialsearch_pi2 < plugin.tx_radialsearch_pi1
plugin.tx_radialsearch_pi2 {
  userFunc = tx_radialsearch_pi1->radiusbox
}
  // plugin.tx_radialsearch_pi2

plugin.tx_radialsearch_pi3 {
    // Never remove this property!
  pluginCheck = dummy
}

  ///////////////////////////////////////////////////////////////
  //
  // page

page {
  includeCSS {
    tx_radialsearch_jqueryUi = {$plugin.tx_radialsearch_pi1.css.jquery.path}
  }
}
  // page
